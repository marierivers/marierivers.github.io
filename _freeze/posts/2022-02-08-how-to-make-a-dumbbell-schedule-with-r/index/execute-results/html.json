{
  "hash": "1a97b0c7ace8c45aacd0b82ffd2d795c",
  "result": {
    "markdown": "---\ntitle: \"How to make a dumbbell schedule with R\"\ndescription: \"A modern update to the Gantt chart\"\nauthor:\n  - name: Marie Rivers\n    url: https://marierivers.github.io/\ndate: 2022-02-08\ncategories: [R, data visualization]\ncitation: \n  url: https://marierivers.github.io/posts/2022-02-08-how-to-make-a-dumbbell-schedule-with-r/ \n#image: \ndraft: false\n---\nHere is a tutorial to create a custom dot plot / dumbbell plot schedule with R and `geom_dumbbell` and `geom_segment`. With this template you can also color items by categories such as deliverable, status or quarter. \n\nOriginal inspiration: [and guidance on using geom_dumbbell](https://rpubs.com/ageek/ggplot-adv-part2).\n\n\n\n# Read and view the data\n\nI started from an excel sheet. \n\n::: {.cell}\n\n```{.r .cell-code}\nschedule <- read_excel(here(\"posts\", \"2022-02-08-how-to-make-a-dumbbell-schedule-with-r\", \"schedule.xlsx\"), sheet = \"Sheet1\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(schedule) %>% \n  kable_paper(full_width = TRUE) %>% \n  row_spec(0, bold = T) %>% \n  kable_styling(latex_options = \"HOLD_position\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper table\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;font-weight: bold;\"> milestone </th>\n   <th style=\"text-align:left;font-weight: bold;\"> deliverable </th>\n   <th style=\"text-align:left;font-weight: bold;\"> start_date </th>\n   <th style=\"text-align:left;font-weight: bold;\"> due_date </th>\n   <th style=\"text-align:left;font-weight: bold;\"> status </th>\n   <th style=\"text-align:left;font-weight: bold;\"> quarter </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Draft Feasibility Study </td>\n   <td style=\"text-align:left;\"> Feasibility Study </td>\n   <td style=\"text-align:left;\"> 2022-01-12 </td>\n   <td style=\"text-align:left;\"> 2022-02-07 </td>\n   <td style=\"text-align:left;\"> complete </td>\n   <td style=\"text-align:left;\"> Q1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Final Feasibility Study </td>\n   <td style=\"text-align:left;\"> Feasibility Study </td>\n   <td style=\"text-align:left;\"> 2022-02-12 </td>\n   <td style=\"text-align:left;\"> 2022-03-11 </td>\n   <td style=\"text-align:left;\"> in progress </td>\n   <td style=\"text-align:left;\"> Q1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Draft Design Drawings </td>\n   <td style=\"text-align:left;\"> Design Drawings </td>\n   <td style=\"text-align:left;\"> 2022-01-24 </td>\n   <td style=\"text-align:left;\"> 2022-03-18 </td>\n   <td style=\"text-align:left;\"> in progress </td>\n   <td style=\"text-align:left;\"> Q1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Final Design Drawings </td>\n   <td style=\"text-align:left;\"> Design Drawings </td>\n   <td style=\"text-align:left;\"> 2022-04-12 </td>\n   <td style=\"text-align:left;\"> 2022-05-20 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Draft Technical Documentation </td>\n   <td style=\"text-align:left;\"> Technical Documentation </td>\n   <td style=\"text-align:left;\"> 2022-03-01 </td>\n   <td style=\"text-align:left;\"> 2022-03-18 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Final Technical Documentation </td>\n   <td style=\"text-align:left;\"> Technical Documentation </td>\n   <td style=\"text-align:left;\"> 2022-03-28 </td>\n   <td style=\"text-align:left;\"> 2022-04-22 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Stakeholder Presentation </td>\n   <td style=\"text-align:left;\"> Presentation </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:left;\"> 2022-03-25 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Draft Web Application </td>\n   <td style=\"text-align:left;\"> Web Application </td>\n   <td style=\"text-align:left;\"> 2022-02-18 </td>\n   <td style=\"text-align:left;\"> 2022-03-16 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Final Web Application </td>\n   <td style=\"text-align:left;\"> Web Application </td>\n   <td style=\"text-align:left;\"> 2022-03-28 </td>\n   <td style=\"text-align:left;\"> 2022-05-27 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Client Presentation </td>\n   <td style=\"text-align:left;\"> Presentation </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:left;\"> 2022-06-03 </td>\n   <td style=\"text-align:left;\"> not started </td>\n   <td style=\"text-align:left;\"> Q2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n# Clean the data\n\nPay attention to date formats with `class(schedule$start_date)`. Cleaning steps created a field for month abbreviation + day of month to use as labels. The deliverable category was reordered based on due date using `fct_reorder`.\n\n::: {.cell}\n\n```{.r .cell-code}\nschedule <- schedule %>% \n  mutate(start_month_num = month(start_date)) %>% \n  mutate(end_month_num = month(due_date)) %>% \n  mutate(start_month_name = case_when(\n    start_month_num == 1 ~ \"Jan\",\n    start_month_num == 2  ~ \"Feb\",\n    start_month_num == 3 ~ \"Mar\",\n    start_month_num == 4 ~ \"Apr\",\n    start_month_num == 5 ~ \"May\",\n    start_month_num == 6 ~ \"Jun\",\n  )) %>% \n  mutate(end_month_name = case_when(\n    end_month_num == 1 ~ \"Jan\",\n    end_month_num == 2 ~ \"Feb\",\n    end_month_num == 3 ~ \"Mar\",\n    end_month_num == 4 ~ \"Apr\",\n    end_month_num == 5 ~ \"May\",\n    end_month_num == 6 ~ \"Jun\",\n  )) %>% \n  mutate(start_label = paste(start_month_name, day(start_date))) %>% \n  mutate(end_label = paste(end_month_name, day(due_date))) %>% \n  mutate(milestone = as_factor(milestone)) %>% \n  mutate(milestone = fct_reorder(milestone, as.numeric(due_date), .desc = TRUE))\n```\n:::\n\nThis step was used for the bounds of the rectangle highlighting the second quarter.\n\n::: {.cell}\n\n```{.r .cell-code}\nQ2 <- schedule %>% \n  filter(quarter == \"Q2\")\nxmin_Q2 <- as.POSIXct(min(Q2$start_date, na.rm = TRUE))\nxmax_Q2 <- as.POSIXct(max(Q2$due_date, na.rm = TRUE))\n```\n:::\n\nThis step was used to set the x-axis limits when using `scale_x_datetime`.\n\n::: {.cell}\n\n```{.r .cell-code}\nmin <- as.POSIXct(\"2022-1-1\")\nmax <- as.POSIXct(\"2022-6-15\")\n```\n:::\nI originally used geom_dumbbell for the start and end dots, but using `geom_point` twice gave more flexibility for colors and made it easy add transparency to the start dots. The `geom_dumbbell` code is include for reference.\n\n::: {.cell}\n\n```{.r .cell-code}\ntime_plot <- ggplot(data = schedule, aes(y = milestone)) +\n  geom_rect(aes(xmin = xmin_Q2, ymin = -Inf,\n                xmax = xmax_Q2, ymax = Inf),\n                fill = \"grey80\", alpha = 0.5) +\n  # create a thick line between x and xend instead of using default provided by geom_dumbbell\n  geom_segment(aes(x = start_date, xend = due_date, y = milestone, yend = milestone), \n               color = \"grey50\", \n               size = 1.5) +\n  # geom_dumbbell(color = \"grey80\", size_x = 5, size_xend = 5,\n  #               colour_x = \"blue\", colour_xend = \"red\") +\n  geom_point(data = schedule, aes(x = start_date, y = milestone,\n                              color = deliverable), size = 5, alpha = 0.5,\n             show.legend = FALSE) +\n  # scale_colour_paletteer_d(\"Redmonder::qMSOPap\") +\n  # scale_colour_paletteer_d(\"Redmonder::qMSOPap\") +\n  # scale_colour_paletteer_d(\"Redmonder::qMSOMed\") +\n  # scale_colour_paletteer_d(\"palettetown::pelipper\") +\n  scale_colour_manual(values = c(\"#007a76\", \"#b7245c\", \"#ca7f0e\", \"#0d4fbd\", \"#785ceb\")) + # manually specify colors or use an existing palette\n  geom_point(data = schedule, aes(x = due_date, y = milestone,\n                              color = deliverable), size = 5,\n             show.legend = FALSE) +\n  labs(x = NULL, y = NULL,\n       title = \"Milestone Timeline\") +\n  geom_text(color = \"black\", size = 3, hjust = 1.5,\n            aes(x = start_date, label = start_label)) +\n  geom_text(color = \"black\", size = 3, hjust = -0.5,\n            aes(x = due_date, label = end_label)) +\n  theme_minimal() +\n  theme(panel.grid = element_blank()) +\n  theme(plot.title.position = \"plot\") +\n  scale_x_datetime(limits = c(min, max)) +\n  annotate(\"text\", x = as.POSIXct(\"2022-5-1\"), y = schedule$milestone[1], label = \"Q2\", color = \"black\", size = 5)\ntime_plot\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_segment).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_text).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}